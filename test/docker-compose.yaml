# A `docker compose` config file to run tests services for testing
# `@opentelemetry/instrumentation-*` locally.
#
# Note: This isn't used in CI. CI uses GitHub Actions' `services: ...` for
# defining test services.
#
# Usage:
#   npm run test-services:start [services...]
#   npm run test-services:stop [services...]

name: opentelemetry-js-contrib-test-services

services:
  cassandra:
    image: cassandra:3
    environment:
      MAX_HEAP_SIZE: "1G"
      HEAP_NEWSIZE: 400m
    ports:
      - "9042:9042"
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
      interval: 1s
      timeout: 10s
      retries: 30

  memcached:
    image: memcached:1.6.37-alpine
    ports:
    - 11211:11211

  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok", "--quiet"]
      interval: 1s
      timeout: 10s
      retries: 30

  mssql:
    # Tags listed at https://hub.docker.com/r/microsoft/mssql-server
    # Docs: https://learn.microsoft.com/en-us/sql/linux/quickstart-install-connect-docker
    image: mcr.microsoft.com/mssql/server:2022-CU14-ubuntu-22.04
    platform: linux/amd64
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=mssql_passw0rd
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-C", "-S", "mssql", "-U", "sa", "-P", "mssql_passw0rd", "-Q", "select 1"]
      interval: 1s
      timeout: 10s
      retries: 30

  mysql:
    image: mysql:5.7
    # No ARM64 image layer. See https://stackoverflow.com/a/65592942
    platform: linux/x86_64
    environment:
      MYSQL_USER: "otel"
      MYSQL_PASSWORD: "secret"
      MYSQL_DATABASE: "otel_mysql_database"
      MYSQL_ROOT_PASSWORD: "rootpw"
    ports:
      - "33306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping"]
      interval: 1s
      timeout: 10s
      retries: 30

  oracledb:
    image: gvenzl/oracle-free:slim
    environment:
      APP_USER: "otel"
      APP_USER_PASSWORD: "secret"
      ORACLE_PASSWORD: "oracle"
    ports:
      - 1521:1521
    healthcheck:
      test: ["CMD", "sqlplus" ,"system/oracle@//localhost/FREEPDB1"]
      interval: 10s
      timeout: 5s
      retries: 30

  postgres:
    # https://github.com/docker-library/docs/blob/master/postgres/README.md#how-to-extend-this-image
    image: postgres:16-alpine
    ports:
      - "54320:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "otel_pg_database"
      POSTGRES_PASSWORD: "postgres"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 1s
      timeout: 10s
      retries: 30

  rabbitmq:
    image: rabbitmq:3
    environment:
      RABBITMQ_DEFAULT_USER: "username"
      RABBITMQ_DEFAULT_PASS: "password"
    ports:
      - "22221:5672"

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 10s
      retries: 30
