name: Unit Tests
on:
  push:
    branches: [main]
  pull_request:

jobs:
  unit-test:
    strategy:
      fail-fast: false
      matrix:
        container: ["node:8", "node:10", "node:12", "node:14"]
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.container }}
    services:
      mongo:
        image: mongo
        ports:
        - 27017:27017
      postgres:
        image: circleci/postgres:9.6-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: circle_database
        ports:
        - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
        - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mysql:
        image: circleci/mysql:5.7
        env:
          MYSQL_USER: otel
          MYSQL_PASSWORD: secret
          MYSQL_DATABASE: circle_database
          MYSQL_ROOT_PASSWORD: rootpw
        ports:
        - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RUN_POSTGRES_TESTS: 1
      RUN_MYSQL_TESTS: 1
      RUN_MONGODB_TESTS: 1
      RUN_REDIS_TESTS: 1
      POSTGRES_USER: postgres
      POSTGRES_DB: circle_database
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      OPENTELEMETRY_REDIS_HOST: redis
      OPENTELEMETRY_REDIS_PORT: 6379
      MONGODB_DB: opentelemetry-tests
      MONGODB_HOST: mongo
      MONGODB_PORT: 27017
      MYSQL_USER: otel
      MYSQL_PASSWORD: secret
      MYSQL_DATABASE: circle_database
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: restore lock files
        uses: actions/cache@master # must use unreleased master to cache multiple paths
        id: cache
        with:
          # must be done before bootstrap to not include node_modules files in the cache paths
          path: |
            packages/*/package-lock.json
            metapackages/*/package-lock.json
            plugins/node/*/package-lock.json
            plugins/web/*/package-lock.json
            propagators/*/package-lock.json
            detectors/node*/package-lock.json
          key: ${{ runner.os }}-unit_test-${{ matrix.container }}-${{ hashFiles('**/package.json') }}

      # On a cache hit, use ci to speed up the install process
      - name: Bootstrap (cache hit)
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          npm ci --ignore-scripts
          npx lerna bootstrap --ignore-scripts

      # On a cache miss, fall back to a regular install
      - name: Bootstrap (cache miss)
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --ignore-scripts -- --only=dev

      - name: Unit tests
        run: npm run test

      - name: Report Coverage
        if: matrix.container == 'node:14'
        run: npm run codecov
  browser-tests:
    runs-on: ubuntu-latest
    container:
      image: circleci/node:12-browsers
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Permission Setup
        run: sudo chmod -R 777 /github /__w

      - name: restore lock files
        uses: actions/cache@master # must use unreleased master to cache multiple paths
        id: cache
        with:
          # must be done before bootstrap to not include node_modules files in the cache paths
          path: |
            packages/*/package-lock.json
            metapackages/*/package-lock.json
            plugins/node/*/package-lock.json
            plugins/web/*/package-lock.json
            propagators/*/package-lock.json
            detectors/node*/package-lock.json
          key: ${{ runner.os }}-unit_test-${{ matrix.container }}-${{ hashFiles('**/package.json') }}

      # On a cache hit, use ci to speed up the install process
      - name: Bootstrap (cache hit)
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          npm ci --ignore-scripts
          npx lerna bootstrap --ignore-scripts
          npm run compile

      # On a cache miss, fall back to a regular install
      - name: Bootstrap (cache miss)
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --ignore-scripts -- --only=dev
          npm run compile

      - name: Unit tests
        run: npm run test:browser

      - name: Report Coverage
        run: npm run codecov:browser
