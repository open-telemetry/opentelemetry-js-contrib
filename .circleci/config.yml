version: 2

node_test_env: &node_test_env
  RUN_POSTGRES_TESTS: 1
  RUN_MYSQL_TESTS: 1
  RUN_MONGODB_TESTS: 1
  RUN_REDIS_TESTS: 1
  POSTGRES_USER: postgres
  POSTGRES_DB: circle_database
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432
  OPENTELEMETRY_REDIS_HOST: 'localhost'
  OPENTELEMETRY_REDIS_PORT: 6379
  MONGODB_HOST: localhost
  MONGODB_DB: opentelemetry-tests
  MONGODB_PORT: 27017
  MYSQL_USER: otel
  MYSQL_PASSWORD: secret
  MYSQL_DATABASE: circle_database
  MYSQL_PORT: 3306
  NPM_CONFIG_UNSAFE_PERM: true

postgres_service: &postgres_service
  image: circleci/postgres:9.6-alpine
  environment: # env to pass to CircleCI, specified values must match node_test_env
    POSTGRES_USER: postgres
    POSTGRES_DB: circle_database
redis_service: &redis_service
  image: redis

mongo_service: &mongo_service
  image: mongo

mysql_service: &mysql_service
  image: circleci/mysql:5.7
  environment:
    MYSQL_USER: otel
    MYSQL_PASSWORD: secret
    MYSQL_DATABASE: circle_database
    MYSQL_ROOT_PASSWORD: rootpw

cache_1: &cache_1
  key: npm-cache-01-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/checksums.txt" }}
  paths:
    - ./node_modules
    - ./package-lock.json
    - detectors/node/opentelemetry-resource-detector-github/node_modules
    - metapackages/plugins-node-core-and-contrib/node_modules
    - packages/opentelemetry-host-metrics/node_modules
    - packages/opentelemetry-test-utils/node_modules
    - plugins/node/opentelemetry-hapi-instrumentation/node_modules
    - plugins/node/opentelemetry-instrumentation-graphql/node_modules
    - plugins/node/opentelemetry-koa-instrumentation/node_modules
    - plugins/node/opentelemetry-plugin-dns/node_modules
    - plugins/node/opentelemetry-plugin-express/node_modules
    - plugins/node/opentelemetry-plugin-ioredis/node_modules
    - plugins/node/opentelemetry-plugin-mongodb/node_modules
    - plugins/node/opentelemetry-plugin-mysql/node_modules
    - plugins/node/opentelemetry-plugin-pg/node_modules
    - plugins/node/opentelemetry-plugin-pg-pool/node_modules
    - plugins/node/opentelemetry-plugin-redis/node_modules
    - plugins/web/opentelemetry-plugin-document-load/node_modules
    - plugins/web/opentelemetry-plugin-react-load/node_modules
    - plugins/web/opentelemetry-instrumentation-user-interaction/node_modules
    - propagators/opentelemetry-propagator-jaeger/node_modules
    - propagators/opentelemetry-propagator-grpc-census-binary/node_modules

node_unit_tests: &node_unit_tests
  resource_class: large
  steps:
    - checkout
    - run:
        name: Create Checksum
        command: sh .circleci/checksum.sh /tmp/checksums.txt
    - run:
        name: Setup environment variables
        command: |
          echo "export CIRCLE_NODE_VERSION=\$(node --version | grep -oE 'v[0-9]+')" >> $BASH_ENV
          source $BASH_ENV
    - run:
        name: Log out node.js version
        command: |
          node --version
          echo "CIRCLE_NODE_VERSION=${CIRCLE_NODE_VERSION}"
    - restore_cache:
        keys:
          - npm-cache-01-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/checksums.txt" }}-F267A71D
    - run:
        name: Install Root Dependencies
        command: npm install --ignore-scripts
    - run:
        name: Boostrap dependencies
        command: npx lerna bootstrap --no-ci
    - save_cache:
        <<: *cache_1
    - run:
        name: Unit tests
        command: npm run test
    - run:
        name: report coverage
        command: if [ "${CIRCLE_NODE_VERSION}" = "v12" ]; then npm run codecov; fi

browsers_unit_tests: &browsers_unit_tests
  resource_class: large
  steps:
    - checkout
    - run:
        name: Create Checksum
        command: sh .circleci/checksum.sh /tmp/checksums.txt
    - run:
        name: Setup environment variables
        command: |
          echo "export CIRCLE_NODE_VERSION=\$(node --version | grep -oE 'v[0-9]+')" >> $BASH_ENV
          source $BASH_ENV
    - run:
        name: Log out node.js version
        command: |
          node --version
          echo "CIRCLE_NODE_VERSION=${CIRCLE_NODE_VERSION}"
    - restore_cache:
        keys:
          - npm-cache-01-{{ .Environment.CIRCLE_JOB }}-{{ checksum "/tmp/checksums.txt" }}-F267A71D
    - run:
        name: Install Root Dependencies
        command: npm install --ignore-scripts
    - run:
        name: Boostrap dependencies
        command: npx lerna bootstrap --no-ci
    - save_cache:
        <<: *cache_1
    - run:
        name: Unit tests
        command: npm run test:browser
    - run:
        name: report coverage
        command: if [ "$CIRCLE_NODE_VERSION" = "v12" ]; then npm run codecov:browser; fi

jobs:
  node8:
    docker:
      - image: node:8
        environment: *node_test_env
      - *postgres_service
      - *mysql_service
      - *redis_service
      - *mongo_service
    <<: *node_unit_tests
  node10:
    docker:
      - image: node:10
        environment: *node_test_env
      - *postgres_service
      - *mysql_service
      - *redis_service
      - *mongo_service
    <<: *node_unit_tests
  node12:
    docker:
      - image: node:12
        environment: *node_test_env
      - *postgres_service
      - *mysql_service
      - *redis_service
      - *mongo_service
    <<: *node_unit_tests
  node14:
    docker:
      - image: node:14
        environment: *node_test_env
      - *postgres_service
      - *mysql_service
      - *redis_service
      - *mongo_service
    <<: *node_unit_tests
  node12-browsers:
    docker:
      - image: circleci/node:12-browsers
    <<: *browsers_unit_tests

workflows:
  version: 2
  build:
    jobs:
      - node8
      - node10
      - node12
      - node14
      - node12-browsers

